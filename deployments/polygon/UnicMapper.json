{
  "address": "0x4D46c584A47ed0B8F5b5B569Bf20b8328d39fca3",
  "abi": [
    {
      "inputs": [],
      "name": "AlreadySet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_chain",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_assetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "IDSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "idToAsset",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "chain",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_chain",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setIdToAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_ids",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_chains",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "_assetAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "setIdsToAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_chain",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_assetAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "_ids",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "setIdsToCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb434f82aef223d5b2fe770226f84a0aab494f060b7719f788eb7de04b32ae557",
  "receipt": {
    "to": null,
    "from": "0xa8f24a55dcE2826ced9851C02011256614d233c6",
    "contractAddress": "0x4D46c584A47ed0B8F5b5B569Bf20b8328d39fca3",
    "transactionIndex": 205,
    "gasUsed": "634150",
    "logsBloom": "0x
    "blockHash": "0x18a83df7a3fa0958bd84760d9983dd7e0570a129d1acc3b92ba7b92a25068e03",
    "transactionHash": "0xb434f82aef223d5b2fe770226f84a0aab494f060b7719f788eb7de04b32ae557",
    "logs": [
      {
        "transactionIndex": 205,
        "blockNumber": 35238228,
        "transactionHash": "0xb434f82aef223d5b2fe770226f84a0aab494f060b7719f788eb7de04b32ae557",
        "address": "0x4D46c584A47ed0B8F5b5B569Bf20b8328d39fca3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a8f24a55dce2826ced9851c02011256614d233c6"
        ],
        "data": "0x",
        "logIndex": 563,
        "blockHash": "0x18a83df7a3fa0958bd84760d9983dd7e0570a129d1acc3b92ba7b92a25068e03"
      },
      {
        "transactionIndex": 205,
        "blockNumber": 35238228,
        "transactionHash": "0xb434f82aef223d5b2fe770226f84a0aab494f060b7719f788eb7de04b32ae557",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a8f24a55dce2826ced9851c02011256614d233c6",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000049b63c8796d5b60000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000085e77deb4dd718826a00000000000000000000000000000000000000000000000003739249215f92a4a00000000000000000000000000000000000000000000085e78286b19f91efc56",
        "logIndex": 564,
        "blockHash": "0x18a83df7a3fa0958bd84760d9983dd7e0570a129d1acc3b92ba7b92a25068e03"
      }
    ],
    "blockNumber": 35238228,
    "cumulativeGasUsed": "17125481",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "49ed41926a8ebe20a1014386ec268aa3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_chain\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"IDSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"idToAsset\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"chain\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_chain\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setIdToAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_ids\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_chains\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"_assetAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"setIdsToAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_chain\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_ids\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"setIdsToCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/UnicMapper.sol\":\"UnicMapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/contracts/UnicMapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/IUnicMapper.sol\\\";\\n\\ncontract UnicMapper is IUnicMapper, Ownable, Pausable {\\n    mapping(bytes32 => AssetInfo) public override idToAsset;\\n\\n    function setIdToAsset(bytes32 _id, bytes32 _chain, address _assetAddress, uint _tokenId) external override {\\n        if (idToAsset[_id].assetAddress != address(0)) revert AlreadySet();\\n        if (_assetAddress == address(0)) revert ZeroAddress();\\n\\n        idToAsset[_id] = AssetInfo(_chain, _assetAddress, _tokenId);\\n\\n        emit IDSet(_id, _chain, _assetAddress, _tokenId);\\n    }\\n\\n    function setIdsToAssets(\\n        bytes32[] memory _ids,\\n        bytes32[] memory _chains,\\n        address[] memory _assetAddresses,\\n        uint[] memory _tokenIds\\n    ) external override {\\n        for (uint256 i; i < _ids.length;) {\\n            bytes32 _id = _ids[i];\\n            bytes32 _chain = _chains[i];\\n            address _assetAddress = _assetAddresses[i];\\n            uint _tokenId = _tokenIds[i];\\n            if (idToAsset[_id].assetAddress != address(0)) revert AlreadySet();\\n            if (_assetAddresses[i] == address(0)) revert ZeroAddress();\\n\\n            idToAsset[_id] = AssetInfo(_chain, _assetAddress, _tokenId);\\n\\n            emit IDSet(_id, _chain, _assetAddress, _tokenId);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function setIdsToCollection(\\n        bytes32 _chain,\\n        address _assetAddress,\\n        bytes32[] memory _ids,\\n        uint[] memory _tokenIds\\n    ) external override {\\n        if (_assetAddress == address(0)) revert ZeroAddress();\\n\\n        for (uint256 i; i < _ids.length;) {\\n            bytes32 _id = _ids[i];\\n            uint _tokenId = _tokenIds[i];\\n            if (idToAsset[_id].assetAddress != address(0)) revert AlreadySet();\\n\\n            idToAsset[_id] = AssetInfo(_chain, _assetAddress, _tokenId);\\n\\n            emit IDSet(_id, _chain, _assetAddress, _tokenId);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x078868e62c2734167bbc87fb1d9d8362805485bbb6004c0051d68d809766713b\",\"license\":\"MIT\"},\"src/interfaces/IUnicMapper.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUnicMapper {\\n    struct AssetInfo {\\n        bytes32 chain;\\n        address assetAddress;\\n        uint tokenId;\\n    }\\n\\n    function idToAsset(bytes32) external view returns (bytes32, address, uint);\\n\\n    function setIdToAsset(bytes32 _id, bytes32 _chain, address _assetAddress, uint _tokenId) external;\\n\\n    function setIdsToAssets(bytes32[] memory _ids, bytes32[] memory _chains, address[] memory _assetAddresses, uint[] memory _tokenIds) external;\\n\\n    function setIdsToCollection(\\n        bytes32 _chain,\\n        address _assetAddress,\\n        bytes32[] memory _ids,\\n        uint[] memory _tokenIds\\n    ) external;\\n\\n    error AlreadySet();\\n    error ZeroAddress();\\n\\n    event IDSet(bytes32 _id, bytes32 _chain, address _assetAddress, uint _tokenId);\\n}\",\"keccak256\":\"0x6a28074f877a1a27cbe73fd299671b0e7af13dee5199df920873a86ceaeebd3a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002c565b6000805460ff60a01b1916905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a0b8061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b820050e1161005b578063b820050e14610131578063d20a622e14610144578063e6563ce014610157578063f2fde38b1461016a57600080fd5b80635c975abb1461008d5780636dde9cd4146100af578063715018a61461010c5780638da5cb5b14610116575b600080fd5b600054600160a01b900460ff1660405190151581526020015b60405180910390f35b6100e96100bd3660046106e9565b60016020819052600091825260409091208054918101546002909101546001600160a01b039091169083565b604080519384526001600160a01b039092166020840152908201526060016100a6565b61011461017d565b005b6000546040516001600160a01b0390911681526020016100a6565b61011461013f3660046107f4565b610191565b6101146101523660046108fb565b61035a565b610114610165366004610960565b6104b6565b61011461017836600461099d565b6105c1565b61018561063f565b61018f6000610699565b565b60005b84518110156103535760008582815181106101b1576101b16109bf565b6020026020010151905060008583815181106101cf576101cf6109bf565b6020026020010151905060008584815181106101ed576101ed6109bf565b60200260200101519050600085858151811061020b5761020b6109bf565b602090810291909101810151600086815260019283905260409020909101549091506001600160a01b0316156102545760405163a741a04560e01b815260040160405180910390fd5b60006001600160a01b0316878681518110610271576102716109bf565b60200260200101516001600160a01b0316036102a05760405163d92e233d60e01b815260040160405180910390fd5b60408051606080820183528582526001600160a01b03858116602080850182815285870188815260008c815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518881529081018790529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a184600101945050505050610194565b5050505050565b6001600160a01b0383166103815760405163d92e233d60e01b815260040160405180910390fd5b60005b82518110156103535760008382815181106103a1576103a16109bf565b6020026020010151905060008383815181106103bf576103bf6109bf565b602090810291909101810151600084815260019283905260409020909101549091506001600160a01b0316156104085760405163a741a04560e01b815260040160405180910390fd5b60408051606080820183528982526001600160a01b03898116602080850182815285870188815260008a815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518681529081018b90529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a15050600101610384565b600084815260016020819052604090912001546001600160a01b0316156104f05760405163a741a04560e01b815260040160405180910390fd5b6001600160a01b0382166105175760405163d92e233d60e01b815260040160405180910390fd5b60408051606080820183528582526001600160a01b03858116602080850182815285870188815260008c815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518881529081018790529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a150505050565b6105c961063f565b6001600160a01b0381166106335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61063c81610699565b50565b6000546001600160a01b0316331461018f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161062a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106fb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561074157610741610702565b604052919050565b600067ffffffffffffffff82111561076357610763610702565b5060051b60200190565b600082601f83011261077e57600080fd5b8135602061079361078e83610749565b610718565b82815260059290921b840181019181810190868411156107b257600080fd5b8286015b848110156107cd57803583529183019183016107b6565b509695505050505050565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806000806080858703121561080a57600080fd5b843567ffffffffffffffff8082111561082257600080fd5b61082e8883890161076d565b955060209150818701358181111561084557600080fd5b61085189828a0161076d565b95505060408701358181111561086657600080fd5b8701601f8101891361087757600080fd5b803561088561078e82610749565b81815260059190911b8201840190848101908b8311156108a457600080fd5b928501925b828410156108c9576108ba846107d8565b825292850192908501906108a9565b965050505060608701359150808211156108e257600080fd5b506108ef8782880161076d565b91505092959194509250565b6000806000806080858703121561091157600080fd5b84359350610921602086016107d8565b9250604085013567ffffffffffffffff8082111561093e57600080fd5b61094a8883890161076d565b935060608701359150808211156108e257600080fd5b6000806000806080858703121561097657600080fd5b843593506020850135925061098d604086016107d8565b9396929550929360600135925050565b6000602082840312156109af57600080fd5b6109b8826107d8565b9392505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122025369f77edee6c6224f27075910afaa6f5a6fcf4186d94bec1e627ad1d7fed9464736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b820050e1161005b578063b820050e14610131578063d20a622e14610144578063e6563ce014610157578063f2fde38b1461016a57600080fd5b80635c975abb1461008d5780636dde9cd4146100af578063715018a61461010c5780638da5cb5b14610116575b600080fd5b600054600160a01b900460ff1660405190151581526020015b60405180910390f35b6100e96100bd3660046106e9565b60016020819052600091825260409091208054918101546002909101546001600160a01b039091169083565b604080519384526001600160a01b039092166020840152908201526060016100a6565b61011461017d565b005b6000546040516001600160a01b0390911681526020016100a6565b61011461013f3660046107f4565b610191565b6101146101523660046108fb565b61035a565b610114610165366004610960565b6104b6565b61011461017836600461099d565b6105c1565b61018561063f565b61018f6000610699565b565b60005b84518110156103535760008582815181106101b1576101b16109bf565b6020026020010151905060008583815181106101cf576101cf6109bf565b6020026020010151905060008584815181106101ed576101ed6109bf565b60200260200101519050600085858151811061020b5761020b6109bf565b602090810291909101810151600086815260019283905260409020909101549091506001600160a01b0316156102545760405163a741a04560e01b815260040160405180910390fd5b60006001600160a01b0316878681518110610271576102716109bf565b60200260200101516001600160a01b0316036102a05760405163d92e233d60e01b815260040160405180910390fd5b60408051606080820183528582526001600160a01b03858116602080850182815285870188815260008c815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518881529081018790529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a184600101945050505050610194565b5050505050565b6001600160a01b0383166103815760405163d92e233d60e01b815260040160405180910390fd5b60005b82518110156103535760008382815181106103a1576103a16109bf565b6020026020010151905060008383815181106103bf576103bf6109bf565b602090810291909101810151600084815260019283905260409020909101549091506001600160a01b0316156104085760405163a741a04560e01b815260040160405180910390fd5b60408051606080820183528982526001600160a01b03898116602080850182815285870188815260008a815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518681529081018b90529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a15050600101610384565b600084815260016020819052604090912001546001600160a01b0316156104f05760405163a741a04560e01b815260040160405180910390fd5b6001600160a01b0382166105175760405163d92e233d60e01b815260040160405180910390fd5b60408051606080820183528582526001600160a01b03858116602080850182815285870188815260008c815260018085529089902097518855915191870180546001600160a01b0319169290951691909117909355915160029094019390935583518881529081018790529283019190915281018290527fe4fe3dc7745c90663c6d5224533c5a0d230f4d9ea5e92578285995e9f146f4939060800160405180910390a150505050565b6105c961063f565b6001600160a01b0381166106335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61063c81610699565b50565b6000546001600160a01b0316331461018f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161062a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106fb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561074157610741610702565b604052919050565b600067ffffffffffffffff82111561076357610763610702565b5060051b60200190565b600082601f83011261077e57600080fd5b8135602061079361078e83610749565b610718565b82815260059290921b840181019181810190868411156107b257600080fd5b8286015b848110156107cd57803583529183019183016107b6565b509695505050505050565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806000806080858703121561080a57600080fd5b843567ffffffffffffffff8082111561082257600080fd5b61082e8883890161076d565b955060209150818701358181111561084557600080fd5b61085189828a0161076d565b95505060408701358181111561086657600080fd5b8701601f8101891361087757600080fd5b803561088561078e82610749565b81815260059190911b8201840190848101908b8311156108a457600080fd5b928501925b828410156108c9576108ba846107d8565b825292850192908501906108a9565b965050505060608701359150808211156108e257600080fd5b506108ef8782880161076d565b91505092959194509250565b6000806000806080858703121561091157600080fd5b84359350610921602086016107d8565b9250604085013567ffffffffffffffff8082111561093e57600080fd5b61094a8883890161076d565b935060608701359150808211156108e257600080fd5b6000806000806080858703121561097657600080fd5b843593506020850135925061098d604086016107d8565b9396929550929360600135925050565b6000602082840312156109af57600080fd5b6109b8826107d8565b9392505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122025369f77edee6c6224f27075910afaa6f5a6fcf4186d94bec1e627ad1d7fed9464736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "src/contracts/UnicMapper.sol:UnicMapper",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 523,
        "contract": "src/contracts/UnicMapper.sol:UnicMapper",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3588,
        "contract": "src/contracts/UnicMapper.sol:UnicMapper",
        "label": "idToAsset",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(AssetInfo)3926_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(AssetInfo)3926_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IUnicMapper.AssetInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(AssetInfo)3926_storage"
      },
      "t_struct(AssetInfo)3926_storage": {
        "encoding": "inplace",
        "label": "struct IUnicMapper.AssetInfo",
        "members": [
          {
            "astId": 3921,
            "contract": "src/contracts/UnicMapper.sol:UnicMapper",
            "label": "chain",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 3923,
            "contract": "src/contracts/UnicMapper.sol:UnicMapper",
            "label": "assetAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3925,
            "contract": "src/contracts/UnicMapper.sol:UnicMapper",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}